import java.sql.*;
import java.util.Scanner;

public class ProductCRUD {
    private static final String URL = "jdbc:mysql://localhost:3306/your_database_name";
    private static final String USER = "your_username";
    private static final String PASSWORD = "your_password";

    private Connection connection;

    public ProductCRUD() {
        try {
            connection = DriverManager.getConnection(URL, USER, PASSWORD);
            connection.setAutoCommit(false); // For transaction handling
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Create Product
    public void createProduct(int productID, String productName, double price, int quantity) {
        String query = "INSERT INTO Product (ProductID, ProductName, Price, Quantity) VALUES (?, ?, ?, ?)";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, productID);
            statement.setString(2, productName);
            statement.setDouble(3, price);
            statement.setInt(4, quantity);
            statement.executeUpdate();
            connection.commit();
            System.out.println("Product created successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Read Product
    public void readProduct(int productID) {
        String query = "SELECT * FROM Product WHERE ProductID = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, productID);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                System.out.println("ProductID: " + resultSet.getInt("ProductID"));
                System.out.println("ProductName: " + resultSet.getString("ProductName"));
                System.out.println("Price: " + resultSet.getDouble("Price"));
                System.out.println("Quantity: " + resultSet.getInt("Quantity"));
            } else {
                System.out.println("Product not found.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Update Product
    public void updateProduct(int productID, String newName, double newPrice, int newQuantity) {
        String query = "UPDATE Product SET ProductName = ?, Price = ?, Quantity = ? WHERE ProductID = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, newName);
            statement.setDouble(2, newPrice);
            statement.setInt(3, newQuantity);
            statement.setInt(4, productID);
            int rowsUpdated = statement.executeUpdate();
            if (rowsUpdated > 0) {
                connection.commit();
                System.out.println("Product updated successfully.");
            } else {
                System.out.println("Product not found.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Delete Product
    public void deleteProduct(int productID) {
        String query = "DELETE FROM Product WHERE ProductID = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, productID);
            int rowsDeleted = statement.executeUpdate();
            if (rowsDeleted > 0) {
                connection.commit();
                System.out.println("Product deleted successfully.");
            } else {
                System.out.println("Product not found.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Menu-driven method to handle user input
    public static void main(String[] args) {
        ProductCRUD productCRUD = new ProductCRUD();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n1. Create Product");
            System.out.println("2. Read Product");
            System.out.println("3. Update Product");
            System.out.println("4. Delete Product");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            int productID;
            String name;
            double price;
            int quantity;

            switch (choice) {
                case 1:
                    System.out.print("Enter ProductID: ");
                    productID = scanner.nextInt();
                    System.out.print("Enter ProductName: ");
                    name = scanner.next();
                    System.out.print("Enter Price: ");
                    price = scanner.nextDouble();
                    System.out.print("Enter Quantity: ");
                    quantity = scanner.nextInt();
                    productCRUD.createProduct(productID, name, price, quantity);
                    break;
                case 2:
                    System.out.print("Enter ProductID: ");
                    productID = scanner.nextInt();
                    productCRUD.readProduct(productID);
                    break;
                case 3:
                    System.out.print("Enter ProductID: ");
                    productID = scanner.nextInt();
                    System.out.print("Enter new ProductName: ");
                    name = scanner.next();
                    System.out.print("Enter new Price: ");
                    price = scanner.nextDouble();
                    System.out.print("Enter new Quantity: ");
                    quantity = scanner.nextInt();
                    productCRUD.updateProduct(productID, name, price, quantity);
                    break;
                case 4:
                    System.out.print("Enter ProductID: ");
                    productID = scanner.nextInt();
                    productCRUD.deleteProduct(productID);
                    break;
                case 5:
                    try {
                        productCRUD.connection.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
